@startuml model
left to right direction

package pl.lodz.p.it.ssbd2022.ssbd03.mok.model {
    AccessLevel "*" <-- "1" Account : - account
    Account "0..1" <-- "0..1" AccessLevel : - accessLevels

    AccessLevel <|-- DataClient
    AccessLevel <|-- DataSpecialist
    AccessLevel <|-- DataAdmin
}

package pl.lodz.p.it.ssbd2022.ssbd03.mop.model {
    Appointment "1" o---- "2" Account : - specialist \n patient
    Appointment "1" o--- "1" Implant : - implant
    Review "1" o- "*" Account : - account
    Review "1" o-- "1" Implant : - implant
    Appointment <- Status : - status
}

package pl.lodz.p.it.ssbd2022.ssbd03.common {
    AbstractEntity <|- Account 
    AbstractEntity <|-- AccessLevel
    AbstractEntity <|--- Implant
    AbstractEntity <|- Review
    AbstractEntity <|- Appointment
}


abstract class AbstractEntity <<MappedSuperClass>> {
    -UUID id
    -Long version

    +hashCode(): int
    +equals(object: AbstractEntity): boolean
    +getId(): UUID
    +getVersion(): Long
}

class Implant {
    {static} long serialVersionUID = 1L
    -String name
    -String description
    -String manufacturer
    -Integer price
    -boolean archived
    -Integer popularity
    -Duration duration
    -List<Review> reviews
}

class Review {
    {static} long serialVersionUID = 1L
    -Implant implant
    -Account author
    -String text
    -Date date
}

class Appointment {
    {static} long serialVersionUID = 1L
    -Account specialist
    -Account client
    -Implant implant
    -DateTime startDate
    -DateTime endDate
    -Integer price
    -String description
    -Status status
}

enum Status {
    ACCEPTED
    REJECTED
    PENDING
    FINNISHED
}

class Account {
    {static} long serialVersionUID = 1L
    -String login
    -String password
    -boolean active
    -boolean confirmed
    -List<AccessLevel> accessLevels
    .. secondary_table ..
    -String email
    -String firstName
    -String lastName
    ' --
    ' +Account()
    ' +Account(
    '     login: String,
    '     password: String,
    '     active: boolean,
    '     confirmed: boolean,
    '     accessLevels: List<AccessLevel>,
    '     email: String,
    '     firstName: String,
    '     lastName: String
    ' )
    ' +getLogin(): String
    ' +getPassword(): String
    ' +isActive(): boolean
    ' +isConfirmed(): boolean
    ' +getAccessLevels(): List<AccessLevel>
    ' +getEmail(): String
    ' +getFirstName(): String
    ' +getLastName(): String
    ' +setLogin(login: String): void
    ' +setPassword(password: String): void
    ' +setActive(active: boolean): void
    ' +setConfirmed(confirmed: boolean): void
    ' +setEmail(email: String): void
    ' +setFirstName(firstName: String): void
    ' +setLastName(lastName: String): void
    ' +toString(): String
}

abstract class AccessLevel {
    {static} long serialVersionUID = 1L
    -String accessLevel
    -boolean active
    -Account account
    ' --
    ' +getAccessLevel(): String
    ' +isActive(): boolean
    ' +getAccount(): Account
    ' +setAccessLevel(accessLevel: String): void
    ' +setActive(active: boolean): void
    ' +setAccount(account: Account): void
    ' +toString(): String
}

class DataClient {
    {static} long serialVersionUID = 1L
    -String pesel
    -Collection<Appointment> appointmentCollection
    -Collection<Review> reviewCollection
    ' --
    ' +DataClient()
    ' +getPesel(): String
    ' +setPesel(pesel: String): void
    ' +toString(): String
}

class DataSpecialist {
    {static} long serialVersionUID = 1L
    -String phoneNumber
    -Collection<Appointment> appointmentCollection
    ' --
    ' +DataDoctor()
    ' +getPhoneNumber(): String
    ' +setPhoneNumber(phoneNumber: String): void
    ' +toString(): String
}

class DataAdmin {
    {static} long serialVersionUID = 1L
    -String phoneNumber
    ' --
    ' +DataAdmin()
    ' +getPhoneNumber(): String
    ' +setPhoneNumber(phoneNumber: String): void
    ' +toString(): String
}

@enduml
